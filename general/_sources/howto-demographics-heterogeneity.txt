===================================
Configure heterogeneous populations
===================================

Demographics files are used to add heterogeneity to a population. You can define the initial
distribution to use for age, prevalence, risk and more. You can also define values for
accessibility, age, geography, risk, and other properties and assign individuals to groups based on
those property values. This topic describes how to configure the population distribution and define
heterogeneous groups.

After you set up the groups, you may want to add more parameters to the :term:`demographics file` to
configure how individuals transition into and out of groups, how transmission occurs between
different groups, or how to target interventions to specific groups. For more information about the
parameters and structure of demographics files, see :doc:`parameter-demographics`.

For example, you might want to divide a population up into different groups based on age so you can
target interventions to individuals in a particular age range. Another common use is to configure
treatment coverage to be higher for individuals in areas that are easy to access and lower for
individuals in areas that are difficult to access. For more information on targeting interventions
to particular groups, see :doc:`howto-targeted-interventions`. For information on how tp configure
disease transmission among groups created with any of the properties, see :doc:`howto-hint`.

.. include:: ../reuse/demographic-nodes.txt

Define the initial population distribution
==========================================

You can configure attribute distributions in the population using the **IndividualAttributes**
parameter in the demographics file. The initial value for an individual is a randomly selected value
from the distribution. For example, if you use a uniform distribution to initialize age, the initial
ages of individuals in the simulation will be evenly distributed between some minimum and maximum
value.

#.  In the demographics file, add the **IndividualAttributes** parameter and assign it an empty
    JSON object. If you want the groups to apply to all nodes, add it in the **Defaults** section;
    if you want the groups to be applied to specific nodes, add it to the **Nodes** section.

#.  Within this object, add the parameters for different attributes (age, prevalence, etc.) and assign
    values for available distributions (constant, Gaussian, etc.) See :doc:`parameter-demographics`
    for more information about the available parameters.

The example below shows how to set up the age distribution for all nodes in a simulation.

.. literalinclude:: ../json/howto-demographics-attributes.json

.. TBD we really need to provide more information about how this works as part of rewriting the
.. demographics reference after finishing the migration to Sphinx

Create groups for properties other than age
===========================================

Assigning individuals to different groups based on properties, such as accessibility or risk, uses
the **IndividualProperties** parameter in the demographics file. See :doc:`parameter-demographics`
for a list of supported properties. The values you assign to properties are use-defined and can
be applied to individuals in all nodes or only in particular nodes in a simulation.

#.  In the demographics file, add the **IndividualProperties** parameter and set it to an empty array.
    If you want the groups to apply to all nodes, add it in the **Defaults** section; if you want the
    groups to be applied to specific nodes, add it to the **Nodes** section.

#.  In the array, add an empty JSON object. Within it, do the following:

    #.  Add the **Property** parameter and set it to one of the supported values.

    #.  Add the **Values** parameter and set it to an array of possible values that can
        be assigned to individuals. You can define any value here.

    #.  Add the **Initial_Distribution** parameter and set it to an array of numbers that add
        up to 1. This configures the initial distribution of individuals assigned to each of the groups.

    #.  To define how individuals transition into and a out of each group, add the **Transitions**
        parameter and set it to it an empty array. Within it, do the following:

            #.  Add an empty JSON object and set parameters that define the group that individuals
                transition from, the group they transition to, the event that triggers the transition,
                the probability of transition, and more. See doc:`parameter-demographics` for a
                list of supported **Transitions** parameters and values.

#.  If you want to add another property and associated groups, add a new JSON object in the
    **IndividualProperties** array as above.

    .. note::

        Multiple properties must be defined in one file. They can be defined in either the base
        layer demographics file or an overlay file, but they cannot be split between the files.
        The maximum number of property types that can be added is two.

.. TBD is this still accurate or can you add more groups?

Create groups for age ranges
============================

Creating groups based on age ranges works a little differently than creating groups based on other
properties. **Age_Bin** is tied to the simulated age of an individual rather than being an
independent property. Some of its characteristics, such as initial distribution and transitions, are
dependent on information from the demographics file and |EMOD_s| that manages individual aging
during the simulation. Because of this, the parameters and structures in **IndividualProperties**
are slightly different.

#.  In the demographics file, add the **IndividualProperties** parameter and set it to an empty array.
    If you want the groups to apply to all nodes, add it in the **Defaults** section; if you want the
    groups to be applied to specific nodes, add it to the **Nodes** section.

#.  In the array, add an empty JSON object. Within it, do the following:

    #.  Add the **Property** parameter and set it to "Age_Bin".

    #.  Add the **Age_Bin_Edges_In_Years** parameter and set it to an array that contains a comma-
        delimited list of integers in ascending order that define the boundaries used for each of
        the age bins, in years. The first number must always be 0 (zero) to indicate the age at
        birth and the last number must be -1 to indicate the maximum age in the simulation.

    #.  To define how individuals transition into and a out of each group, add the **Transitions**
        parameter and set it to it an empty array. Aging during the simulation will be handled
        by |EMOD_s|.


The example below shows how to set up several groups based on disease risk and physical place, and
how to move individuals among these groups. It also defines three age bins: 0 to 5 years,
older than 5 to 13, and older than 13 to the maximum age.

.. literalinclude:: ../json/howto-demographics-groups.json
